default_docker: &default_docker
  docker:
    - image: norionomura/swift
      #swiftdocker/swift

version: 2.0
jobs:
  resolve:
    <<: *default_docker
    steps:
      - checkout
      - run:
          name: Resolve
          command: |
           swift package resolve
           swift package update
           cp ./Package.resolved .build/Package.resolved
      - persist_to_workspace:
          root: .build
          paths:
            - checkouts
            - dependencies-state.json
            - repositories/
            - Package.resolved

  build_debug:
    <<: *default_docker
    steps:
      - checkout
      - attach_workspace:
          at: .build
      - run:
          name: "Copy Package.resolved"
          command: "if [ -f .build/Package.resolved ]; then cp .build/Package.resolved ./Package.resolved; fi"
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
      - run:
          name: Build for debug
          command: swift build
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
          paths:
            - .build/

  build_release:
    <<: *default_docker
    steps:
      - checkout
      - attach_workspace:
          at: .build
      - run:
          name: "Copy Package.resolved"
          command: "if [ -f .build/Package.resolved ]; then cp .build/Package.resolved ./Package.resolved; fi"
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
      - run:
          name: Build for release
          command: swift build -c release
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
          paths:
            - .build/

  test_parallel:
    <<: *default_docker
    steps:
      - checkout
      - attach_workspace:
          at: .build
      - run:
          name: "Copy Package.resolved"
          command: "if [ -f .build/Package.resolved ]; then cp .build/Package.resolved ./Package.resolved; fi"
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
      - run:
          name: Run unit tests
          command: swift test --parallel
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
          paths:
            - .build/

  test:
    <<: *default_docker
    steps:
      - checkout
      - attach_workspace:
          at: .build
      - run:
          name: "Copy Package.resolved"
          command: "if [ -f .build/Package.resolved ]; then cp .build/Package.resolved ./Package.resolved; fi"
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
      - run:
          name: Run unit tests
          command: swift test
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ checksum "Package.resolved" }}
          paths:
            - .build/

workflows:
  version: 2
  resolve_build_test:
    jobs:
      - resolve
      - build_debug:
          requires:
            - resolve
      - build_release:
          requires:
            - resolve
      - test:
          requires:
            - build_debug
            - build_release
      - test_parallel:
          requires:
            - build_debug
            - build_release
